AWSTemplateFormatVersion: "2010-09-09"
Description: Frontend for Project GOBO
Resources:

  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties: 
      DomainName: {{{ certificate.verification }}}
      ValidationMethod: DNS
      {{#if certificate.aliases}}
      SubjectAlternativeNames:
        {{#each certificate.aliases}}
        - "{{{ . }}}"
        {{/each}}
      {{/if}}

  Distribution:
    Type: "AWS::CloudFront::Distribution"
    DependsOn:
      - Certificate
    Properties:
      DistributionConfig:
        Aliases:
        {{#each aliases}}
          - '{{{ domain }}}'
        {{/each}}
        Comment: {{{ description }}} ({{{ environment }}})
        DefaultCacheBehavior:
          TargetOriginId: {{{ origins.[0].domain }}}
          AllowedMethods: [ GET, HEAD, OPTIONS, PUT, PATCH, POST, DELETE ]
          CachedMethods: [ GET, HEAD, OPTIONS ]
          Compress: true
          # TODO: Make these more dynamic...
          CachePolicyId: 8fb29c6a-5f85-4787-9ed9-31d1d57c0265
          OriginRequestPolicyId: 23cae513-0f13-410d-85c8-b7ea17eed283
          ResponseHeadersPolicyId: 63e3ee97-60d4-4e2e-ab92-b66970c0f403
          ViewerProtocolPolicy: redirect-to-https
          {{#if handlers }}
          LambdaFunctionAssociations:
            {{#each handlers}}
            - EventType: {{{ event }}}
              IncludeBody: {{{ includesBody }}}
              LambdaFunctionARN: {{{ arn }}}
            {{/each}}
          {{/if}}

        DefaultRootObject: ""
        Enabled: true
        HttpVersion: http2and3
        IPV6Enabled: false
        Origins:
          {{#each origins}}
          - Id: {{{ domain }}}
            DomainName: {{{ domain }}}
            CustomOriginConfig:
              HTTPSPort: {{ custom.httpsPort }}
              HTTPPort: {{ custom.httpPort }}
              OriginKeepaliveTimeout: 60
              {{#if custom.https }}
              OriginProtocolPolicy: "https-only"
              {{else}}
              OriginProtocolPolicy: "http-only"
              {{/if}}
              OriginReadTimeout: 60
              OriginSSLProtocols: [ "TLSv1.2" ]
            {{#if headers}}
            OriginCustomHeaders:
              {{#each headers}}
              - HeaderName: "{{{ name }}}"
                HeaderValue: >-
                  {{{ value }}}
              {{/each}}
            {{/if}}

          {{/each}}
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: "sni-only"
      Tags:
        - Key: component
          Value: {{{ namespace }}}
        - Key: environment
          Value: {{{ environment }}}

  {{#if dns}}
  {{#each dns}}
  RecordSet{{{ awsCase tld }}}:
    Type: "AWS::Route53::RecordSetGroup"
    DependsOn:
      - Distribution
    Properties:
      Comment: >-
        {{{ tld }}} alias for 
        {{{ @root.namespace }}} {{{ @root.name }}} 
        ({{{ @root.environment }}})
      HostedZoneId: {{{ zone }}}
      RecordSets:
        {{#each aliases}}
        - Name: '{{{ . }}}.'
          Type: A
          AliasTarget:
            DNSName: !GetAtt [ Distribution, "DomainName" ]
            EvaluateTargetHealth: false
            HostedZoneId: Z2FDTNDATAQYW2
        {{/each}}
  {{/each}}
  {{/if}}

Outputs:
  CloudFrontDistributions:
    Value: !Ref Distribution